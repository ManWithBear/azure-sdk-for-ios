// --------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// --------------------------------------------------------------------------

import AzureCore
import Foundation
// swiftlint:disable superfluous_disable_command
// swiftlint:disable identifier_name
// swiftlint:disable line_length
// swiftlint:disable cyclomatic_complexity

/// Reports the effective settings used in the current call.
public struct RouteReport: Codable, Swift.Error {
    // MARK: Properties

    /// Effective parameters or data used when calling this Route API.
    public let effectiveSettings: [EffectiveSetting]?

    // MARK: Initializers

    /// Initialize a `RouteReport` structure.
    /// - Parameters:
    ///   - effectiveSettings: Effective parameters or data used when calling this Route API.
    public init(
        effectiveSettings: [EffectiveSetting]? = nil
    ) {
        self.effectiveSettings = effectiveSettings
    }

    // MARK: Codable

    enum CodingKeys: String, CodingKey {
        case effectiveSettings = "effectiveSettings"
    }

    /// Initialize a `RouteReport` structure from decoder
    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        self.effectiveSettings = try? container.decode([EffectiveSetting].self, forKey: .effectiveSettings)
    }

    /// Encode a `RouteReport` structure
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if effectiveSettings != nil { try? container.encode(effectiveSettings, forKey: .effectiveSettings) }
    }
}
