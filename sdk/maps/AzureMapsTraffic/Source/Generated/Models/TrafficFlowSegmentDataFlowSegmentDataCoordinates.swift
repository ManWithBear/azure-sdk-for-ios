// --------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// --------------------------------------------------------------------------

import AzureCore
import Foundation
// swiftlint:disable superfluous_disable_command
// swiftlint:disable identifier_name
// swiftlint:disable line_length
// swiftlint:disable cyclomatic_complexity

/// Includes the coordinates describing the shape of the segment. Coordinates are shifted from the road depending on the zoom level to support high quality visualization in every scale.
public struct TrafficFlowSegmentDataFlowSegmentDataCoordinates: Codable {
    // MARK: Properties

    /// Coordinate array
    public let coordinates: [LatLongPair]?

    // MARK: Initializers

    /// Initialize a `TrafficFlowSegmentDataFlowSegmentDataCoordinates` structure.
    /// - Parameters:
    ///   - coordinates: Coordinate array
    public init(
        coordinates: [LatLongPair]? = nil
    ) {
        self.coordinates = coordinates
    }

    // MARK: Codable

    enum CodingKeys: String, CodingKey {
        case coordinates = "coordinate"
    }

    /// Initialize a `TrafficFlowSegmentDataFlowSegmentDataCoordinates` structure from decoder
    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        self.coordinates = try? container.decode([LatLongPair].self, forKey: .coordinates)
    }

    /// Encode a `TrafficFlowSegmentDataFlowSegmentDataCoordinates` structure
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if coordinates != nil { try? container.encode(coordinates, forKey: .coordinates) }
    }
}
