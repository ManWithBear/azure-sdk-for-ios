// --------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// --------------------------------------------------------------------------

import AzureCore
import Foundation
// swiftlint:disable superfluous_disable_command
// swiftlint:disable identifier_name
// swiftlint:disable line_length
// swiftlint:disable cyclomatic_complexity

/// Generic representation of a point with coordinates (x, y) in the Cartesian plane.
public struct Point: Codable {
    // MARK: Properties

    /// x coordinate
    public let x: Float?
    /// y coordinate
    public let y: Float?

    // MARK: Initializers

    /// Initialize a `Point` structure.
    /// - Parameters:
    ///   - x: x coordinate
    ///   - y: y coordinate
    public init(
        x: Float? = nil, y: Float? = nil
    ) {
        self.x = x
        self.y = y
    }

    // MARK: Codable

    enum CodingKeys: String, CodingKey {
        case x = "x"
        case y = "y"
    }

    /// Initialize a `Point` structure from decoder
    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        self.x = try? container.decode(Float.self, forKey: .x)
        self.y = try? container.decode(Float.self, forKey: .y)
    }

    /// Encode a `Point` structure
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if x != nil { try? container.encode(x, forKey: .x) }
        if y != nil { try? container.encode(y, forKey: .y) }
    }
}
