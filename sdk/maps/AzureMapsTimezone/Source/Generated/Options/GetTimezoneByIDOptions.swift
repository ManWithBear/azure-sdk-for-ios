// --------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// --------------------------------------------------------------------------

import AzureCore
import Foundation

// swiftlint:disable superfluous_disable_command
// swiftlint:disable identifier_name
// swiftlint:disable line_length

/// User-configurable options for the `GetTimezoneByID` operation.
public struct GetTimezoneByIDOptions: RequestOptions {
    /// Specifies the language code in which the timezone names should be returned. If no language code is provided, the response will be in "EN". Please refer to [Supported Languages](https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages) for details.
    public let acceptLanguage: String?
    /// Alternatively, use alias "o". Options available for types of information returned in the result.
    public let options: TimezoneOptions?
    /// Alternatively, use alias "stamp", or "s". Reference time, if omitted, the API will use the machine time serving the request.
    public let timeStamp: Iso8601Date?
    /// Alternatively, use alias "tf". The start date from which daylight savings time (DST) transitions are requested, only applies when "options" = all or "options" = transitions.
    public let daylightSavingsTimeFrom: Iso8601Date?
    /// Alternatively, use alias "ty". The number of years from "transitionsFrom" for which DST transitions are requested, only applies when "options" = all or "options" = transitions.
    public let daylightSavingsTimeLastingYears: Int32?

    /// A client-generated, opaque value with 1KB character limit that is recorded in analytics logs.
    /// Highly recommended for correlating client-side activites with requests received by the server.
    public let clientRequestId: String?

    /// A token used to make a best-effort attempt at canceling a request.
    public let cancellationToken: CancellationToken?

    /// A dispatch queue on which to call the completion handler. Defaults to `DispatchQueue.main`.
    public var dispatchQueue: DispatchQueue?

    /// A `PipelineContext` object to associate with the request.
    public var context: PipelineContext?

    /// Initialize a `GetTimezoneByIDOptions` structure.
    /// - Parameters:
    ///   - acceptLanguage: Specifies the language code in which the timezone names should be returned. If no language code is provided, the response will be in "EN". Please refer to [Supported Languages](https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages) for details.
    ///   - options: Alternatively, use alias "o". Options available for types of information returned in the result.
    ///   - timeStamp: Alternatively, use alias "stamp", or "s". Reference time, if omitted, the API will use the machine time serving the request.
    ///   - daylightSavingsTimeFrom: Alternatively, use alias "tf". The start date from which daylight savings time (DST) transitions are requested, only applies when "options" = all or "options" = transitions.
    ///   - daylightSavingsTimeLastingYears: Alternatively, use alias "ty". The number of years from "transitionsFrom" for which DST transitions are requested, only applies when "options" = all or "options" = transitions.
    ///   - clientRequestId: A client-generated, opaque value with 1KB character limit that is recorded in analytics logs.
    ///   - cancellationToken: A token used to make a best-effort attempt at canceling a request.
    ///   - dispatchQueue: A dispatch queue on which to call the completion handler. Defaults to `DispatchQueue.main`.
    ///   - context: A `PipelineContext` object to associate with the request.
    public init(
        acceptLanguage: String? = nil,
        options: TimezoneOptions? = nil,
        timeStamp: Iso8601Date? = nil,
        daylightSavingsTimeFrom: Iso8601Date? = nil,
        daylightSavingsTimeLastingYears: Int32? = nil,
        clientRequestId: String? = nil,
        cancellationToken: CancellationToken? = nil,
        dispatchQueue: DispatchQueue? = nil,
        context: PipelineContext? = nil
    ) {
        self.acceptLanguage = acceptLanguage
        self.options = options
        self.timeStamp = timeStamp
        self.daylightSavingsTimeFrom = daylightSavingsTimeFrom
        self.daylightSavingsTimeLastingYears = daylightSavingsTimeLastingYears
        self.clientRequestId = clientRequestId
        self.cancellationToken = cancellationToken
        self.dispatchQueue = dispatchQueue
        self.context = context
    }
}
