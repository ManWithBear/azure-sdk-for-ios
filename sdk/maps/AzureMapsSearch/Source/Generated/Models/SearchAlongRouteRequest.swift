// --------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// --------------------------------------------------------------------------

import AzureCore
import Foundation
// swiftlint:disable superfluous_disable_command
// swiftlint:disable identifier_name
// swiftlint:disable line_length
// swiftlint:disable cyclomatic_complexity

/// This type represents the request body for the Search Along Route service.
public struct SearchAlongRouteRequest: Codable {
    // MARK: Properties

    /// A valid `GeoJSON LineString` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.4) for details.
    public let route: GeoJsonLineString?

    // MARK: Initializers

    /// Initialize a `SearchAlongRouteRequest` structure.
    /// - Parameters:
    ///   - route: A valid `GeoJSON LineString` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.4) for details.
    public init(
        route: GeoJsonLineString? = nil
    ) {
        self.route = route
    }

    // MARK: Codable

    enum CodingKeys: String, CodingKey {
        case route = "route"
    }

    /// Initialize a `SearchAlongRouteRequest` structure from decoder
    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        self.route = try? container.decode(GeoJsonLineString.self, forKey: .route)
    }

    /// Encode a `SearchAlongRouteRequest` structure
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if route != nil { try? container.encode(route, forKey: .route) }
    }
}
